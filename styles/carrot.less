@import "./colors";

.editor {

  .CodeMirror {
    // Background color of main window
    background-color: @color_white;
  }
  .CodeMirror-scroll {
    // Color of otherwise un-styled text
    color: @color_lightblack;
  }
  .CodeMirror-gutters {
    // Gutter to the left
    background-color: @color_white;
  }
  .CodeMirror-linenumber {
    // Line numbers in the gutter
    color: @color_gray;
  }
  .CodeMirror-selected {
    // Highlighed text
    background-color: @color_whiteorange;
  }
  .CodeMirror-cursor {
    // The cursor
    border-left: 1px solid @color_lightblack;
  }
  .CodeMirror-matchingbracket,
  .CodeMirror-matchingtag {
    // When you click a tag/bracket and the matching one is highlighted
    background: @color_whiteorange !important;
    color: @color_darkgray !important;
    border-bottom: 1px solid @color_orange !important;
  }
  .CodeMirror-foldgutter-open:after {
    // Those little arrows in the gutter
    color: @color_gray;
  }
  .CodeMirror-foldgutter-folded:after {
    // The arrows after you collapse code
    color: @color_darkgray;
  }
  .CodeMirror.over-gutter,
  .CodeMirror-activeline {
    .CodeMirror-foldgutter-open:after {
      // Arrows when hovering on the gutter
      color: @color_gray;
    }
  }
  .CodeMirror-foldmarker {
    // The [...] marking collapsed code
    border-color: @color_gray;
    background-color: @color_gray;
    color: @color_lightorange;
  }
  .CodeMirror .CodeMirror-linewidget img.inline-widget {
    background: rgba(0,0,0,0.05);
  }
  .CodeMirror-searching {
    // Ctrl + F results
    background-color: @color_whiteorange;
    // Selected result
    &.searching-current-match {
      background-color: @color_whiteorange;
    }
  }

  /* All 'dem swatches */

  .CodeMirror {
    .cm-header { color: @color_darkgray; }
    .cm-quote { color: @color_blue; }

    .cm-keyword { color: @color_pink; }
    .cm-atom { color: @color_red; }
    .cm-number { color: @color_red; }
    .cm-def { color: @color_skyblue; }

    .cm-variable { color: @color_blue; }
    .cm-variable-2 { color: @color_orange; }
    .cm-variable-3 { color: @color_purple; }

    .cm-property { color: @color_skyblue; }
    .cm-operator { color: @color_purple; }

    .cm-comment { color: @color_darkgray; font-style:italic; }

    .cm-string { color: @color_green; }
    .cm-string-2 { color: @color_orange; }

    .cm-meta { color: @color_green; }
    .cm-qualifier { color: @color_orange; }
    .cm-builtin { color: @color_red; }
    .cm-bracket { color: @color_pink; }
    .cm-tag { color: @color_blue; }
    .cm-attribute { color: @color_skyblue; }
    .cm-link { color: @color_blue; }
    .cm-special { color: @color_purple; }
    .cm-em { color: #999; }
    .cm-strong { font-weight: bold; }
    .cm-error,
    .cm-invalidchar {
      color: @color_red;
      border-bottom: 1px dotted @color_red;
    }
    .cm-whitespace::before {
      color: @color_darkgray;
      opacity: 0.4;
    }

    // carriage return
    .CodeMirror-code > div > pre > span::after, .CodeMirror-line > span::after {
      color: @color_gray;
      opacity: 0.4;
    }
  }

  /* Active Line Highlight support */
  .CodeMirror-activeline-background {
    background-color: @color_lightorange;
  }
  .CodeMirror-activeline .CodeMirror-linenumber {
    background-color: @color_lightblack;
  }
  .CodeMirror-focused .CodeMirror-activeline .CodeMirror-gutter-elt {
    background: @color_lightblack;
  }

}
